{"ast":null,"code":"import { deepEqual } from \"./deep-equal.js\";\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr) {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n/* eslint-disable complexity */\n/**\n * Applies requested view state to a transform\n * @returns an object containing detected changes\n */\nexport function applyViewStateToTransform(/** An object that describes Maplibre's camera state */\ntr, /** Props from Map component */\nprops) {\n  const v = props.viewState || props;\n  const changes = {};\n  if ('longitude' in v && 'latitude' in v && (v.longitude !== tr.center.lng || v.latitude !== tr.center.lat)) {\n    const LngLat = tr.center.constructor;\n    // @ts-expect-error we should not import LngLat class from maplibre-gl because we don't know the source of mapLib\n    changes.center = new LngLat(v.longitude, v.latitude);\n  }\n  if ('zoom' in v && v.zoom !== tr.zoom) {\n    changes.zoom = v.zoom;\n  }\n  if ('bearing' in v && v.bearing !== tr.bearing) {\n    changes.bearing = v.bearing;\n  }\n  if ('pitch' in v && v.pitch !== tr.pitch) {\n    changes.pitch = v.pitch;\n  }\n  if (v.padding && tr.padding && !deepEqual(v.padding, tr.padding)) {\n    changes.padding = v.padding;\n  }\n  return changes;\n}","map":{"version":3,"names":["deepEqual","transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changes","LngLat","constructor"],"sources":["/Users/dikamanne/gis-global-south-borders/global-south-gis/frontend/node_modules/@vis.gl/react-maplibre/src/utils/transform.ts"],"sourcesContent":["import type {MaplibreProps} from '../maplibre/maplibre';\nimport type {ViewState} from '../types/common';\nimport type {TransformLike} from '../types/internal';\nimport {deepEqual} from './deep-equal';\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: TransformLike): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Applies requested view state to a transform\n * @returns an object containing detected changes\n */\nexport function applyViewStateToTransform(\n  /** An object that describes Maplibre's camera state */\n  tr: TransformLike,\n  /** Props from Map component */\n  props: MaplibreProps\n): Partial<TransformLike> {\n  const v: Partial<ViewState> = props.viewState || props;\n  const changes: Partial<TransformLike> = {};\n\n  if (\n    'longitude' in v &&\n    'latitude' in v &&\n    (v.longitude !== tr.center.lng || v.latitude !== tr.center.lat)\n  ) {\n    const LngLat = tr.center.constructor;\n    // @ts-expect-error we should not import LngLat class from maplibre-gl because we don't know the source of mapLib\n    changes.center = new LngLat(v.longitude, v.latitude);\n  }\n  if ('zoom' in v && v.zoom !== tr.zoom) {\n    changes.zoom = v.zoom;\n  }\n  if ('bearing' in v && v.bearing !== tr.bearing) {\n    changes.bearing = v.bearing;\n  }\n  if ('pitch' in v && v.pitch !== tr.pitch) {\n    changes.pitch = v.pitch;\n  }\n  if (v.padding && tr.padding && !deepEqual(v.padding, tr.padding)) {\n    changes.padding = v.padding;\n  }\n  return changes;\n}\n"],"mappings":"AAGA,SAAQA,SAAS,QAAC;AAElB;;;;;AAKA,OAAM,SAAUC,oBAAoBA,CAACC,EAAiB;EACpD,OAAO;IACLC,SAAS,EAAED,EAAE,CAACE,MAAM,CAACC,GAAG;IACxBC,QAAQ,EAAEJ,EAAE,CAACE,MAAM,CAACG,GAAG;IACvBC,IAAI,EAAEN,EAAE,CAACM,IAAI;IACbC,KAAK,EAAEP,EAAE,CAACO,KAAK;IACfC,OAAO,EAAER,EAAE,CAACQ,OAAO;IACnBC,OAAO,EAAET,EAAE,CAACS;GACb;AACH;AAEA;AACA;;;;AAIA,OAAM,SAAUC,yBAAyBA,CACvC;AACAV,EAAiB,EACjB;AACAW,KAAoB;EAEpB,MAAMC,CAAC,GAAuBD,KAAK,CAACE,SAAS,IAAIF,KAAK;EACtD,MAAMG,OAAO,GAA2B,EAAE;EAE1C,IACE,WAAW,IAAIF,CAAC,IAChB,UAAU,IAAIA,CAAC,KACdA,CAAC,CAACX,SAAS,KAAKD,EAAE,CAACE,MAAM,CAACC,GAAG,IAAIS,CAAC,CAACR,QAAQ,KAAKJ,EAAE,CAACE,MAAM,CAACG,GAAG,CAAC,EAC/D;IACA,MAAMU,MAAM,GAAGf,EAAE,CAACE,MAAM,CAACc,WAAW;IACpC;IACAF,OAAO,CAACZ,MAAM,GAAG,IAAIa,MAAM,CAACH,CAAC,CAACX,SAAS,EAAEW,CAAC,CAACR,QAAQ,CAAC;EACtD;EACA,IAAI,MAAM,IAAIQ,CAAC,IAAIA,CAAC,CAACN,IAAI,KAAKN,EAAE,CAACM,IAAI,EAAE;IACrCQ,OAAO,CAACR,IAAI,GAAGM,CAAC,CAACN,IAAI;EACvB;EACA,IAAI,SAAS,IAAIM,CAAC,IAAIA,CAAC,CAACJ,OAAO,KAAKR,EAAE,CAACQ,OAAO,EAAE;IAC9CM,OAAO,CAACN,OAAO,GAAGI,CAAC,CAACJ,OAAO;EAC7B;EACA,IAAI,OAAO,IAAII,CAAC,IAAIA,CAAC,CAACL,KAAK,KAAKP,EAAE,CAACO,KAAK,EAAE;IACxCO,OAAO,CAACP,KAAK,GAAGK,CAAC,CAACL,KAAK;EACzB;EACA,IAAIK,CAAC,CAACH,OAAO,IAAIT,EAAE,CAACS,OAAO,IAAI,CAACX,SAAS,CAACc,CAAC,CAACH,OAAO,EAAET,EAAE,CAACS,OAAO,CAAC,EAAE;IAChEK,OAAO,CAACL,OAAO,GAAGG,CAAC,CAACH,OAAO;EAC7B;EACA,OAAOK,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}