{"ast":null,"code":"import { useEffect, memo } from 'react';\nimport { applyReactStyle } from \"../utils/apply-react-style.js\";\nimport { useControl } from \"./use-control.js\";\nfunction _FullscreenControl(props) {\n  const ctrl = useControl(({\n    mapLib\n  }) => new mapLib.FullscreenControl({\n    container: props.containerId && document.getElementById(props.containerId)\n  }), {\n    position: props.position\n  });\n  useEffect(() => {\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n  return null;\n}\nexport const FullscreenControl = memo(_FullscreenControl);","map":{"version":3,"names":["useEffect","memo","applyReactStyle","useControl","_FullscreenControl","props","ctrl","mapLib","FullscreenControl","container","containerId","document","getElementById","position","_controlContainer","style"],"sources":["/Users/dikamanne/gis-global-south-borders/global-south-gis/frontend/node_modules/@vis.gl/react-maplibre/src/components/fullscreen-control.ts"],"sourcesContent":["/* global document */\nimport * as React from 'react';\nimport {useEffect, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport {useControl} from './use-control';\n\nimport type {ControlPosition, FullscreenControlOptions} from '../types/lib';\n\nexport type FullscreenControlProps = Omit<FullscreenControlOptions, 'container'> & {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction _FullscreenControl(props: FullscreenControlProps) {\n  const ctrl = useControl(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }),\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport const FullscreenControl = memo(_FullscreenControl);\n"],"mappings":"AAEA,SAAQA,SAAS,EAAEC,IAAI,QAAO,OAAO;AACrC,SAAQC,eAAe,QAAC;AACxB,SAAQC,UAAU,QAAC;AAcnB,SAASC,kBAAkBA,CAACC,KAA6B;EACvD,MAAMC,IAAI,GAAGH,UAAU,CACrB,CAAC;IAACI;EAAM,CAAC,KACP,IAAIA,MAAM,CAACC,iBAAiB,CAAC;IAC3BC,SAAS,EAAEJ,KAAK,CAACK,WAAW,IAAIC,QAAQ,CAACC,cAAc,CAACP,KAAK,CAACK,WAAW;GAC1E,CAAC,EACJ;IAACG,QAAQ,EAAER,KAAK,CAACQ;EAAQ,CAAC,CAC3B;EAEDb,SAAS,CAAC,MAAK;IACbE,eAAe,CAACI,IAAI,CAACQ,iBAAiB,EAAET,KAAK,CAACU,KAAK,CAAC;EACtD,CAAC,EAAE,CAACV,KAAK,CAACU,KAAK,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb;AAEA,OAAO,MAAMP,iBAAiB,GAAGP,IAAI,CAACG,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}