{"ast":null,"code":"import { useEffect, useRef, memo } from 'react';\nimport { applyReactStyle } from \"../utils/apply-react-style.js\";\nimport { useControl } from \"./use-control.js\";\nfunction _ScaleControl(props) {\n  const ctrl = useControl(({\n    mapLib\n  }) => new mapLib.ScaleControl(props), {\n    position: props.position\n  });\n  const propsRef = useRef(props);\n  const prevProps = propsRef.current;\n  propsRef.current = props;\n  const {\n    style\n  } = props;\n  if (props.maxWidth !== undefined && props.maxWidth !== prevProps.maxWidth) {\n    ctrl.options.maxWidth = props.maxWidth;\n  }\n  if (props.unit !== undefined && props.unit !== prevProps.unit) {\n    ctrl.setUnit(props.unit);\n  }\n  useEffect(() => {\n    applyReactStyle(ctrl._container, style);\n  }, [style]);\n  return null;\n}\nexport const ScaleControl = memo(_ScaleControl);","map":{"version":3,"names":["useEffect","useRef","memo","applyReactStyle","useControl","_ScaleControl","props","ctrl","mapLib","ScaleControl","position","propsRef","prevProps","current","style","maxWidth","undefined","options","unit","setUnit","_container"],"sources":["/Users/dikamanne/node_modules/@vis.gl/react-maplibre/src/components/scale-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useEffect, useRef, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport {useControl} from './use-control';\n\nimport type {ControlPosition, ScaleControlOptions} from '../types/lib';\n\nexport type ScaleControlProps = ScaleControlOptions & {\n  // These props will be further constraint by OptionsT\n  unit?: string;\n  maxWidth?: number;\n\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction _ScaleControl(props: ScaleControlProps) {\n  const ctrl = useControl(({mapLib}) => new mapLib.ScaleControl(props), {\n    position: props.position\n  });\n  const propsRef = useRef<ScaleControlProps>(props);\n\n  const prevProps = propsRef.current;\n  propsRef.current = props;\n\n  const {style} = props;\n\n  if (props.maxWidth !== undefined && props.maxWidth !== prevProps.maxWidth) {\n    ctrl.options.maxWidth = props.maxWidth;\n  }\n  if (props.unit !== undefined && props.unit !== prevProps.unit) {\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    applyReactStyle(ctrl._container, style);\n  }, [style]);\n\n  return null;\n}\n\nexport const ScaleControl = memo(_ScaleControl);\n"],"mappings":"AACA,SAAQA,SAAS,EAAEC,MAAM,EAAEC,IAAI,QAAO,OAAO;AAC7C,SAAQC,eAAe,QAAC;AACxB,SAAQC,UAAU,QAAC;AAenB,SAASC,aAAaA,CAACC,KAAwB;EAC7C,MAAMC,IAAI,GAAGH,UAAU,CAAC,CAAC;IAACI;EAAM,CAAC,KAAK,IAAIA,MAAM,CAACC,YAAY,CAACH,KAAK,CAAC,EAAE;IACpEI,QAAQ,EAAEJ,KAAK,CAACI;GACjB,CAAC;EACF,MAAMC,QAAQ,GAAGV,MAAM,CAAoBK,KAAK,CAAC;EAEjD,MAAMM,SAAS,GAAGD,QAAQ,CAACE,OAAO;EAClCF,QAAQ,CAACE,OAAO,GAAGP,KAAK;EAExB,MAAM;IAACQ;EAAK,CAAC,GAAGR,KAAK;EAErB,IAAIA,KAAK,CAACS,QAAQ,KAAKC,SAAS,IAAIV,KAAK,CAACS,QAAQ,KAAKH,SAAS,CAACG,QAAQ,EAAE;IACzER,IAAI,CAACU,OAAO,CAACF,QAAQ,GAAGT,KAAK,CAACS,QAAQ;EACxC;EACA,IAAIT,KAAK,CAACY,IAAI,KAAKF,SAAS,IAAIV,KAAK,CAACY,IAAI,KAAKN,SAAS,CAACM,IAAI,EAAE;IAC7DX,IAAI,CAACY,OAAO,CAACb,KAAK,CAACY,IAAI,CAAC;EAC1B;EAEAlB,SAAS,CAAC,MAAK;IACbG,eAAe,CAACI,IAAI,CAACa,UAAU,EAAEN,KAAK,CAAC;EACzC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAO,IAAI;AACb;AAEA,OAAO,MAAML,YAAY,GAAGP,IAAI,CAACG,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}