{"ast":null,"code":"import * as React from 'react';\nimport { useState, useCallback, useMemo, useContext } from 'react';\nimport { MapContext } from \"./map.js\";\nexport const MountedMapsContext = React.createContext(null);\nexport const MapProvider = props => {\n  const [maps, setMaps] = useState({});\n  const onMapMount = useCallback((map, id = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {\n        ...currMaps,\n        [id]: map\n      };\n    });\n  }, []);\n  const onMapUnmount = useCallback((id = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {\n          ...currMaps\n        };\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n  return React.createElement(MountedMapsContext.Provider, {\n    value: {\n      maps,\n      onMapMount,\n      onMapUnmount\n    }\n  }, props.children);\n};\nexport function useMap() {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n  const mapsWithCurrent = useMemo(() => {\n    return {\n      ...maps,\n      current: currentMap?.map\n    };\n  }, [maps, currentMap]);\n  return mapsWithCurrent;\n}","map":{"version":3,"names":["React","useState","useCallback","useMemo","useContext","MapContext","MountedMapsContext","createContext","MapProvider","props","maps","setMaps","onMapMount","map","id","currMaps","Error","onMapUnmount","nextMaps","createElement","Provider","value","children","useMap","currentMap","mapsWithCurrent","current"],"sources":["/Users/dikamanne/node_modules/@vis.gl/react-maplibre/src/components/use-map.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../maplibre/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport type MapCollection = {\n  [id: string]: MapRef | undefined;\n  current?: MapRef;\n};\n\nexport function useMap(): MapCollection {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent as MapCollection;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,QAAO,OAAO;AAGhE,SAAQC,UAAU,QAAC;AAQnB,OAAO,MAAMC,kBAAkB,GAAGN,KAAK,CAACO,aAAa,CAA0B,IAAI,CAAC;AAEpF,OAAO,MAAMC,WAAW,GAA2CC,KAAK,IAAG;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAyB,EAAE,CAAC;EAE5D,MAAMW,UAAU,GAAGV,WAAW,CAAC,CAACW,GAAW,EAAEC,EAAA,GAAa,SAAS,KAAI;IACrEH,OAAO,CAACI,QAAQ,IAAG;MACjB,IAAID,EAAE,KAAK,SAAS,EAAE;QACpB,MAAM,IAAIE,KAAK,CAAC,oCAAoC,CAAC;MACvD;MACA,IAAID,QAAQ,CAACD,EAAE,CAAC,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,mCAAmCF,EAAE,EAAE,CAAC;MAC1D;MACA,OAAO;QAAC,GAAGC,QAAQ;QAAE,CAACD,EAAE,GAAGD;MAAG,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAGf,WAAW,CAAC,CAACY,EAAA,GAAa,SAAS,KAAI;IAC1DH,OAAO,CAACI,QAAQ,IAAG;MACjB,IAAIA,QAAQ,CAACD,EAAE,CAAC,EAAE;QAChB,MAAMI,QAAQ,GAAG;UAAC,GAAGH;QAAQ,CAAC;QAC9B,OAAOG,QAAQ,CAACJ,EAAE,CAAC;QACnB,OAAOI,QAAQ;MACjB;MACA,OAAOH,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEf,KAAA,CAAAmB,aAAA,CAACb,kBAAkB,CAACc,QAAQ;IAC1BC,KAAK,EAAE;MACLX,IAAI;MACJE,UAAU;MACVK;;EACD,GAEAR,KAAK,CAACa,QAAQ,CACa;AAElC,CAAC;AAOD,OAAM,SAAUC,MAAMA,CAAA;EACpB,MAAMb,IAAI,GAAGN,UAAU,CAACE,kBAAkB,CAAC,EAAEI,IAAI;EACjD,MAAMc,UAAU,GAAGpB,UAAU,CAACC,UAAU,CAAC;EAEzC,MAAMoB,eAAe,GAAGtB,OAAO,CAAC,MAAK;IACnC,OAAO;MAAC,GAAGO,IAAI;MAAEgB,OAAO,EAAEF,UAAU,EAAEX;IAAG,CAAC;EAC5C,CAAC,EAAE,CAACH,IAAI,EAAEc,UAAU,CAAC,CAAC;EAEtB,OAAOC,eAAgC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}